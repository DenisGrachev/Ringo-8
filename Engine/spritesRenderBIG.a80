    ld iyl,8
    display $
reSprite:
;=====================================
attrBufferCorrection:    ld hl,00000
    ;calculate displacement from coords
    CALC_DISPLACEMENT
;=======================================================
    ld iyh,4
reLine01:
    dup 5   
    SPRITE_DOTS_FAST
    inc hl    
    edup

    SPRITE_DOTS_FAST
    add hl,de
    dec iyh : jp nz,reLine01   

    exx : out (c),h : exx  


    dup 5   
    SPRITE_DOTS_FAST
    inc hl
    edup

    SPRITE_DOTS_FAST
    add hl,de

    dup 5   
    SPRITE_DOTS_FAST
    inc hl
    edup

    SPRITE_DOTS_FAST
    add hl,de

;===============================================================    
    ifndef PENTAGON    
    dup 1 : ld (0),bc : edup
    nop : nop : nop
    endif   
;==============================================================

;==============================================================
    ;DELAY
    ifndef PENTAGON
    dup 1 : ld (0),bc : edup
    nop : nop : nop
    endif

    ld a,(ix+SPRITE.X) : ld (ix+SPRITE.DRAWX),a

    ;133t
    CALC_ANIMATION_AND_PATCH

    nop : nop;8t
    inc bc    ;6
    ld a,0;7t

    ld iyh,4 ;11
;==============================================================
;AFTER FLIP ANOTHER 1824t
;==============================================================
reLine02:
    dup 5
    SPRITE_DOTS_FAST
    inc hl
    edup

    SPRITE_DOTS_FAST
    add hl,de

    dec iyh : jp nz,reLine02

    exx : out (c),l : exx    

    dup 5
    SPRITE_DOTS_FAST
    inc hl
    edup

    SPRITE_DOTS_FAST
    add hl,de;11 save for top fix


    dup 5
    SPRITE_DOTS_FAST
    inc hl
    edup

    SPRITE_DOTS_FAST

    ld a,(ix+SPRITE.Y-SPRITE) : ld (ix+SPRITE.DRAWY-SPRITE),a

    ;10t      15
   ; ld bc,SPRITE : add ix,bc ; and b=0 is good      
    ld bc,0 : add ix,bc ; and b=0 is good      

	;13t delay
     ld a,r : nop

    ; 8           10
    dec iyl : jp nz,reSprite
    ;  8          8          7           10
;    dec iyl : ld a,iyl : cp 0 : jp nz,reSprite
;==============================================================    
